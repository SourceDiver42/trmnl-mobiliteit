name: Build and Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  build:
    name: Verify `trnmlp build` succeeds
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Run trmnlp build
        run: bundle exec trmnlp build

  check-secret:
    name: Check if `TRMNL_API_KEY` set
    runs-on: ubuntu-latest
    outputs:
      has-secret: ${{ steps.check.outputs.has-secret }}
    steps:
      - name: Check if TRMNL_API_KEY secret exists
        id: check
        env:
          TRMNL_API_KEY: ${{ secrets.TRMNL_API_KEY }}
        run: |
          if [ -n "$TRMNL_API_KEY" ]; then
            echo "has-secret=true" >> $GITHUB_OUTPUT
          else
            echo "No configured TRMNL_API_KEY, stopping."
            echo "has-secret=false" >> $GITHUB_OUTPUT
          fi
 
  deploy:
    name: Deploy to TRMNL
    needs: [check-secret, check-version, create-release]
    runs-on: ubuntu-latest
    if: success() && needs.check-secret.outputs.has-secret == 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.4'
          bundler-cache: true

      - name: Create trmnlp config directory
        run: mkdir -p ~/.config/trmnlp

      - name: Create trmnlp config file
        run: |
          cat > ~/.config/trmnlp/config.yml << EOF
          ---
          api_key: ${{ secrets.TRMNL_API_KEY }}
          EOF

      - name: Run trmnlp push
        run: |
          echo "Deploying version ${{ needs.check-version.outputs.version }}"
          bundle exec trmnlp push --force